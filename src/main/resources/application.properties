#spring.application.name=bookie
#spring.thymeleaf.cache=false
#spring.devtools.restart.enabled=true
#
#
#spring.jpa.hibernate.ddl-auto=create
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

################################################################


#Hibernate가 엔티티 클래스에 기반하여 테이블 생성 및 업데이트.
#spring.jpa.hibernate.ddl-auto=create
#Hibernate가 테이블을 생성하지 않고, schema.sql에 정의된 내용만 실행.
#spring.jpa.hibernate.ddl-auto=none
#schema.sql로 테이블을 생성하고, JPA를 통해 초기 데이터 로딩.
#spring.jpa.hibernate.ddl-auto=validate

#spring.jpa.show-sql=true:
#Hibernate가 실행하는 SQL을 출력.
#spring.jpa.properties.hibernate.format_sql=true:
#SQL을 보기 좋게 포맷팅.
#logging.level.org.hibernate.SQL=DEBUG:
#SQL 쿼리를 로깅.
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE:
#SQL에 바인딩된 파라미터 값을 로깅.